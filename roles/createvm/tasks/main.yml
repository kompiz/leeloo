---
- name: Set a random 3-digit string
  set_fact:
    r_digits: "{{ lookup('password', '/dev/null chars=digits length=3') }}"
  with_sequence: start=0 end="{{ nodes|int -1 }}"
  register: no_list



- name: Create a number of vm's depending on ext var nodes 
  ansible.builtin.shell: | 
    multipass launch --name k3s-"{{ node_role }}"-"{{ item.ansible_facts.r_digits }}" --cloud-init "{{ role_path }}"/files/cloud-init.yml
  with_items: "{{ no_list.results }}"
  async: 600
  poll: 0    
  register: create_vm_status



- name: Wait for creation to finish
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: jobs
  until: jobs.finished
  delay: 2 
  retries: 80 
  with_items: "{{ create_vm_status.results }}"



- name: Stop new so we can change network mode to bridged
  ansible.builtin.command: multipass stop k3s-"{{ node_role }}"-"{{item.ansible_facts.r_digits }}"
  with_items: "{{ no_list.results }}"



- name: Pause for a bit so VboxManage doesn't get cranky
  pause:
    seconds: 1



- name: Fix bridged mode for VM in hypervisor
  ansible.builtin.command: VBoxManage modifyvm k3s-"{{ node_role }}"-"{{item.ansible_facts.r_digits }}" --nic2 bridged --bridgeadapter2 en0
  become: yes
  with_items: "{{ no_list.results }}"
  retries: 3
  delay: 3
  register: result
  until: result.rc == 0



- name: Start new VM
  ansible.builtin.command: multipass start k3s-"{{ node_role }}"-"{{item.ansible_facts.r_digits }}"
  become: yes
  with_items: "{{ no_list.results }}"



- name: Put bridge conf into vm's
  ansible.builtin.shell: | 
    multipass exec -- k3s-"{{ node_role }}"-"{{item.ansible_facts.r_digits }}" sudo bash -c "cat > /etc/netplan/60-bridge.yaml" < "{{ role_path }}"/files/bridge.conf
  with_items: "{{ no_list.results }}"



- name: Apply bridge conf
  ansible.builtin.command: multipass exec k3s-"{{ node_role }}"-"{{item.ansible_facts.r_digits }}" sudo netplan apply
  with_items: "{{ no_list.results }}"

