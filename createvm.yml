---
- name: Create a bunch of vm's
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:

  - name: Set a random hostname
    set_fact:
      r_digits: "{{ lookup('password', '/dev/null chars=digits length=3') }}"
    with_sequence: start=0 end="{{ nodes|int -1 }}"
    register: no_list



  - name: Create a number of vm's depending on ext var nodes 
    ansible.builtin.shell: multipass launch --name k8s-node-{{ item.ansible_facts.r_digits }} --cloud-init files/cloud-init.yml
    with_items: "{{ no_list.results }}"
    async: 600
    poll: 0    
    register: create_vm_status



  - name: Wait for creation to finish
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: jobs
    until: jobs.finished
    delay: 3 
    retries: 50 
    with_items: "{{ create_vm_status.results }}"



  - name: Stop new so we can change network mode to bridged
    ansible.builtin.command: "multipass stop k8s-node-{{item.ansible_facts.r_digits }}"
    with_items: "{{ no_list.results }}"



  - name: Pause for a bit so VboxManage doesn't get cranky
    pause:
      seconds: 1



  - name: Fix bridge
    ansible.builtin.command: "VBoxManage modifyvm k8s-node-{{item.ansible_facts.r_digits }} --nic2 bridged --bridgeadapter2 en0"
    become: yes
    with_items: "{{ no_list.results }}"
    retries: 3
    delay: 3
    register: result
    until: result.rc == 0



  - name: Start new VM
    ansible.builtin.command: "multipass start k8s-node-{{item.ansible_facts.r_digits }}"
    become: yes
    become_user: mjau
    with_items: "{{ no_list.results }}"



  - name: Put bridge conf into vm's
    ansible.builtin.raw:  multipass exec -- k8s-node-{{item.ansible_facts.r_digits }} sudo bash -c "cat > /etc/netplan/60-bridge.yaml" < files/bridge.conf
    with_items: "{{ no_list.results }}"



  - name: Apply bridge conf
    ansible.builtin.command: "multipass exec k8s-node-{{item.ansible_facts.r_digits }} sudo netplan apply"
    with_items: "{{ no_list.results }}"

